메인에 변수를 선언하고 하위 메서드에 같은 이름의 변수를 선언하면 다른 거다
ex name 을 선언했으면 메인의 name을 하위 메서드의 name에다가 값복사를 해라 라는 뜻

아래는 참고

import java.util.Scanner;

public class BlockScope {
    static Scanner sc1 = new Scanner(System.in);


    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("이름 입력 : ");
        String name = sc1.nextLine();

        for (int i=1; i<=2; i++) {
            callName(name);
        }
    }

    private static void callName(String name) {
        System.out.println("나의 이름은 " + name);
        System.out.print("직무 입력 : ");
        String job = sc1.nextLine();
        System.out.println(job + "입니다.");
    }
}

조건문 정리

표준 출력 장치인 모니터에 값을 출력하였다.
System. + out. + println(리터럴 또는 변수)
시스템으로 출력하는데 괄호안의 내용을 출력하고 행을 바꿔라
출력 방법에 따라 println(), print(), printf()로 바꿔서 사용 가능

ex) printf()
System.out.printf("과목명 : %s \n", "자바");
System.out.printf("과목명 : %1$s 이름: %2$s \n", "자바", "서유미");
System.out.printf("과목명 : %3$s 이름: %2$s 학번: %3$s\n", "자바", "서유미", "2021011868");

// 만약 정수 123을 printf() 출력하고싶다.
System.out.printf("%d \n", 123);

// 만약 공백을 넣어서 정수123을 printf() 출력하고싶다. 6자리 정수로 출력 빈자리는 공백
System.out.printf("%6d \n", 123);

// 방향 바꿔서
System.out.printf("%-6d \n", 123);

// 만약 000을 넣어서 정수123을 printf() 출력하고싶다. 6자리 정수로 출력 빈자리는 공백
System.out.printf("%06d \n", 123);

ex) printf() 실수표현
// 정수 7자리 + 소수점 + 소수2자리 . 왼쪽 빈자리 공백 ex) ____123.45
System.out.printf("%10.2f \n", 123.45); //%10(10자리수 소수점까지 세야함) + .2f(소수형 2자리까지 표현)
// 이렇게 됐을 때 소수점 3자리까지 적게 되면 반올림 된다 기본으로 2자리로 설정했기 때문

// 정수 7자리 + 소수점 + 소수2자리 . 왼쪽 빈자리 0으로 출력 ex) ____123.45
System.out.printf("%010.2f \n", 123.45);


ex) println() //문자열 표현
//문자열은 %s 포맷    abc출력
System.out.println("%s \n", "abc");

//문자열은 %s 포맷    abc출력 왼쪽에 빈공백 채우기(숫자 6자리)
System.out.println("6%s \n", "abc");

//특수문자 \t, \n %%
System.out.println("소금물의 농도 %% %d \n", 35);


여기까지 변수

